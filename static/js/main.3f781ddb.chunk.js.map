{"version":3,"sources":["components/Ui/Range.module.scss","components/Ui/Display-Panel.module.scss","components/Ui/Control-Panel.module.scss","components/App.module.scss","components/Ui/CopyRight-Panel.module.scss","components/Ui/Button.module.scss","components/Ui/Range.tsx","components/Ui/Text.tsx","components/Ui/Display-Panel.tsx","components/Blocks/Square.tsx","components/Blocks/Row.tsx","components/Blocks/Grid.tsx","components/Ui/Button.tsx","components/Ui/Control-Panel.tsx","components/Ui/CopyRight-Panel.tsx","components/App.tsx","app/store.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","Range","props","id","className","Style","htmlFor","Range__Input","Range__Label","type","min","max","onChange","defaultValue","step","React","memo","Text","text","DisplayPanel","simSpeedometer","setSimSpeed","stepsCounter","Square","active","onMouseLeave","row","col","onMouseDown","onMouseUp","Row","map","e","i","iden","useCallback","prev","next","JSON","stringify","Grid","useState","Math","floor","window","innerHeight","innerWidth","operations","generateEmptyArray","rows","push","Array","from","setSquare","r","c","setGrid","g","produce","newGrid","mouseHoldRef","current","holdingValueRef","setMouseDown","v","setMouseHold","setHoldingValue","setMouseUp","setMouseLeave","startSimulation","simRunningRef","neighbors","forEach","o","undefined","setTimeout","simSpeedometerRef","resetGrid","resetStepsCounter","starCounting","addStepsCounter","grid","mouseHold","useRef","holdingValue","simRunning","firstRender","setFirstRender","firstRenderRef","useEffect","simReseting","random","simRandom","Button","onClick","ControlPanel","setSimRun","Button_Text_1","Button_1","setSimReset","Button_2","setSimRandom","Button_3","CopyRightPanel","Date","getFullYear","App","setSimRunning","s","setButtonText","setSimReseting","setSimRandomize","console","log","event","setSimSpeedometer","currentTarget","valueAsNumber","setStepsCounter","stepsCounterRef","buttonText","store","configureStore","reducer","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.3f781ddb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Range\":\"Range_Range__lWrYZ\",\"Range__Input\":\"Range_Range__Input__2byrF\",\"Range__Label\":\"Range_Range__Label__1Psgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DisplayPanel\":\"Display-Panel_DisplayPanel__1KKKK\",\"Range\":\"Display-Panel_Range__rt1aJ\",\"Text\":\"Display-Panel_Text__2D1o0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ControlPanel\":\"Control-Panel_ControlPanel__2DNSG\",\"Button_1\":\"Control-Panel_Button_1__UtBE7\",\"Button_2\":\"Control-Panel_Button_2__NNZI4\",\"Button_3\":\"Control-Panel_Button_3__332LG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__dAmwc\",\"ControlPanel\":\"App_ControlPanel__8iqCI\",\"CopyRightPanel\":\"App_CopyRightPanel__37YKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CopyRightPanel\":\"CopyRight-Panel_CopyRightPanel__3XG2o\",\"Text\":\"CopyRight-Panel_Text__28S_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2O6ar\"};","import React from \"react\";\nimport Style from \"./Range.module.scss\";\n\ninterface props {\n  onChange(event: React.FormEvent<HTMLInputElement>): void;\n  id: string;\n}\n\nfunction Range(props: props) {\n  return (\n    <div id={props.id} className={Style.Range}>\n      <label htmlFor={Style.Range__Input} className={Style.Range__Label}>\n        Speedometer\n      </label>\n      <input\n        type=\"range\"\n        min=\"100\"\n        max=\"1000\"\n        id={Style.Range__Input}\n        className={Style.Range__Input}\n        onChange={props.onChange}\n        defaultValue=\"600\"\n        step=\"100\"\n      />\n    </div>\n  );\n}\n\nexport default React.memo(Range);\n","import React from \"react\";\nimport \"./Text.scss\";\n\ninterface props {\n  text: string;\n  id: string;\n}\n\nfunction Text(props: props) {\n  return (\n    <h1 className=\"Text\" id={props.id}>\n      {props.text}\n    </h1>\n  );\n}\n\nexport default React.memo(Text);\n","import React from \"react\";\nimport Range from \"./Range\";\nimport Style from \"./Display-Panel.module.scss\";\n\nimport Text from \"./Text\";\n\ninterface props {\n  setSimSpeed(event: React.FormEvent<HTMLInputElement>): void;\n  simSpeedometer: number;\n  stepsCounter: number;\n}\n\nfunction DisplayPanel(props: props) {\n  return (\n    <div className={Style.DisplayPanel}>\n      <Text\n        id={Style.Text}\n        text={\n          props.simSpeedometer > 600\n            ? \"Slow\"\n            : props.simSpeedometer > 300\n            ? \"Medium\"\n            : \"Fast\"\n        }\n      />\n\n      <Range onChange={props.setSimSpeed} id={Style.Range} />\n      <Text text={\"Steps-\" + props.stepsCounter} id={Style.Text} />\n    </div>\n  );\n}\n\nexport default React.memo(DisplayPanel);\n","import React from \"react\";\nimport \"./Square.scss\";\n\ninterface props {\n  row: number;\n  col: number;\n  onMouseLeave(r: number, c: number): void;\n  onMouseDown(r: number, c: number, v: number): void;\n  onMouseUp(r: number, c: number): void;\n  active: number;\n}\n\nfunction Square(props: props) {\n  return (\n    <td\n      className={`Square ${props.active === 1 ? \"Square--Active\" : \"\"}`}\n      key={`${props.row}-${props.col}`}\n      onMouseLeave={() => {\n        props.onMouseLeave(props.row, props.col);\n      }}\n      onMouseDown={() => {\n        props.onMouseDown(props.row, props.col, props.active);\n      }}\n      onMouseUp={() => {\n        props.onMouseUp(props.row, props.col);\n      }}\n    ></td>\n  );\n}\n\nexport default React.memo(Square);\n","import React, { useCallback } from \"react\";\nimport Square from \"./Square\";\nimport \"./Row.scss\";\n\ninterface props {\n  iden: number;\n  onMouseLeave(r: number, c: number): void;\n  onMouseDown(r: number, c: number, v: number): void;\n  onMouseUp(r: number, c: number): void;\n  col: Array<number>;\n}\n\nfunction Row(props: props) {\n  return (\n    <tr className=\"Row\">\n      {props.col.map((e, i) => {\n        return (\n          <Square\n            row={props.iden}\n            col={i}\n            key={`${props.iden}-${i}`}\n            active={e}\n            onMouseLeave={useCallback(props.onMouseLeave, [])}\n            onMouseDown={useCallback(props.onMouseDown, [])}\n            onMouseUp={useCallback(props.onMouseUp, [])}\n          />\n        );\n      })}\n    </tr>\n  );\n}\n\nexport default React.memo(Row, (prev, next) => {\n  return JSON.stringify(prev.col) === JSON.stringify(next.col);\n});\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\nimport produce from \"immer\";\nimport Row from \"./Row\";\nimport \"./Grid.scss\";\n\ninterface props {\n  simRunning: boolean;\n  simReseting: boolean;\n  simRandom: boolean;\n  simSpeedometer: number;\n  addStepsCounter(): void;\n  resetStepsCounter(): void;\n}\n\nfunction Grid(props: props) {\n  //Initial Setup\n\n  const [row] = useState(Math.floor((window.innerHeight - 160) / 27));\n\n  const [col] = useState(Math.floor(window.innerWidth / 27));\n\n  const operations = [\n    [-1, -1],\n    [-1, 0],\n    [-1, 1],\n    [0, -1],\n    [0, 1],\n    [1, -1],\n    [1, 0],\n    [1, 1],\n  ];\n\n  //Methods\n  const generateEmptyArray = () => {\n    const rows = [];\n    for (let i = 0; i < row; i++) {\n      rows.push(Array.from(Array(col), () => 0));\n    }\n    return rows;\n  };\n\n  const setSquare = useCallback((r: number, c: number) => {\n    setGrid((g) => {\n      return produce(g, (newGrid) => {\n        if (mouseHoldRef.current) {\n          newGrid[r][c] = holdingValueRef.current === 1 ? 0 : 1;\n        } else {\n          newGrid[r][c] = g[r][c] === 1 ? 0 : 1;\n        }\n      });\n    });\n  }, []);\n\n  //Events\n  const setMouseDown = useCallback((r: number, c: number, v: number) => {\n    setMouseHold(true);\n    setHoldingValue(v);\n  }, []);\n\n  const setMouseUp = useCallback((r: number, c: number) => {\n    setMouseHold(false);\n    setSquare(r, c);\n  }, []);\n\n  const setMouseLeave = useCallback((r: number, c: number) => {\n    if (mouseHoldRef.current) {\n      setSquare(r, c);\n    }\n  }, []);\n\n  //Controls\n  const startSimulation = () => {\n    if (simRunningRef.current) {\n      setGrid((g) => {\n        return produce(g, (newGrid) => {\n          for (let r = 0; r < row; r++) {\n            for (let c = 0; c < col; c++) {\n              let neighbors = 0;\n              operations.forEach((o) => {\n                if (g[r + o[0]] !== undefined && g[r + o[0]][c + o[1]] === 1) {\n                  neighbors++;\n                }\n              });\n\n              if (neighbors < 2 || neighbors > 3) {\n                newGrid[r][c] = 0;\n              } else if (neighbors === 3) {\n                newGrid[r][c] = 1;\n              }\n            }\n          }\n        });\n      });\n      setTimeout(startSimulation, simSpeedometerRef.current);\n    }\n  };\n\n  const resetGrid = () => {\n    setGrid(() => {\n      props.resetStepsCounter();\n      return generateEmptyArray();\n    });\n  };\n\n  const generateRandomGrid = () => {\n    resetGrid();\n    setGrid((g) => {\n      return produce(g, (newGrid) => {\n        for (let i = Math.floor(Math.random() * row); i < row; i++) {\n          for (let i = Math.floor(Math.random() * col); i < col; i++) {\n            newGrid[Math.floor(Math.random() * row)][\n              Math.floor(Math.random() * col)\n            ] = Math.floor(Math.random() * 2);\n          }\n        }\n      });\n    });\n  };\n\n  const starCounting = () => {\n    if (simRunningRef.current) {\n      props.addStepsCounter();\n      setTimeout(starCounting, simSpeedometerRef.current);\n    }\n  };\n\n  //States\n  const [grid, setGrid] = useState(() => {\n    return generateEmptyArray();\n  });\n\n  const [mouseHold, setMouseHold] = useState(false);\n\n  const mouseHoldRef = useRef(mouseHold);\n  mouseHoldRef.current = mouseHold;\n\n  const [holdingValue, setHoldingValue] = useState(0);\n\n  const holdingValueRef = useRef(holdingValue);\n  holdingValueRef.current = holdingValue;\n\n  const simRunningRef = useRef(props.simRunning);\n  simRunningRef.current = props.simRunning;\n\n  const [firstRender, setFirstRender] = useState(true);\n  const firstRenderRef = useRef(firstRender);\n  firstRenderRef.current = firstRender;\n\n  const simSpeedometerRef = useRef(props.simSpeedometer);\n  simSpeedometerRef.current = props.simSpeedometer;\n\n  //Effects\n  useEffect(() => {\n    startSimulation();\n    starCounting();\n  }, [props.simRunning]);\n\n  useEffect(() => {\n    resetGrid();\n  }, [props.simReseting]);\n\n  useEffect(() => {\n    if (firstRenderRef.current) {\n      setFirstRender(false);\n    } else {\n      generateRandomGrid();\n    }\n  }, [props.simRandom]);\n\n  return (\n    <table className=\"Grid\">\n      <tbody>\n        {grid.map((e, i) => {\n          return (\n            <Row\n              col={e}\n              key={i}\n              iden={i}\n              onMouseLeave={setMouseLeave}\n              onMouseDown={setMouseDown}\n              onMouseUp={setMouseUp}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Grid;\n","import React from \"react\";\nimport Style from \"./Button.module.scss\";\ninterface props {\n  onClick(): void;\n  text: string;\n  id: string;\n}\n\nfunction Button(props: props) {\n  return (\n    <button className={Style.Button} id={props.id} onClick={props.onClick}>\n      {props.text}\n    </button>\n  );\n}\n\nexport default React.memo(Button);\n","import React from \"react\";\nimport Button from \"./Button\";\nimport Style from \"./Control-Panel.module.scss\";\n\ninterface props {\n  setSimRun(): void;\n  setSimReset(): void;\n  setSimRandom(): void;\n  Button_Text_1: string;\n  id: string;\n}\n\nfunction ControlPanel(props: props) {\n  return (\n    <div className={Style.ControlPanel} id={props.id}>\n      <Button\n        onClick={props.setSimRun}\n        text={props.Button_Text_1}\n        id={Style.Button_1}\n      />\n      <Button onClick={props.setSimReset} text=\"Reset\" id={Style.Button_2} />\n      <Button onClick={props.setSimRandom} text=\"Random\" id={Style.Button_3} />\n    </div>\n  );\n}\n\nexport default React.memo(ControlPanel);\n","import React from \"react\";\nimport Style from \"./CopyRight-Panel.module.scss\";\nimport Text from \"./Text\";\n\ninterface props {\n  id: string;\n}\n\nfunction CopyRightPanel(props: props) {\n  return (\n    <div className={Style.CopyRightPanel} id={props.id}>\n      <Text\n        text={\"© Daniel Lane (Lazarev) - \" + new Date().getFullYear()}\n        id={Style.Text}\n      />\n    </div>\n  );\n}\n\nexport default React.memo(CopyRightPanel);\n","import React, { useState, useCallback, useRef } from \"react\";\nimport DisplayPanel from \"./Ui/Display-Panel\";\nimport Grid from \"./Blocks/Grid\";\nimport ControlsPanel from \"./Ui/Control-Panel\";\nimport CopyRightPanel from \"./Ui/CopyRight-Panel\";\nimport Style from \"./App.module.scss\";\n\nfunction App() {\n  const setSimRun = useCallback(() => {\n    setSimRunning((s) => {\n      return s ? false : true;\n    });\n    setButtonText((s) => {\n      return s === \"Start\" ? \"Stop\" : \"Start\";\n    });\n  }, []);\n\n  const setSimReset = useCallback(() => {\n    setSimReseting((s) => {\n      return s ? false : true;\n    });\n  }, []);\n\n  const setSimRandom = useCallback(() => {\n    setSimRandomize((s) => {\n      console.log(s);\n\n      return s ? false : true;\n    });\n  }, []);\n\n  const setSimSpeed = useCallback(\n    (event: React.FormEvent<HTMLInputElement>) => {\n      setSimSpeedometer(event.currentTarget.valueAsNumber);\n    },\n    []\n  );\n\n  const addStepsCounter = useCallback(() => {\n    setStepsCounter(stepsCounterRef.current + 1);\n  }, []);\n\n  const resetStepsCounter = useCallback(() => {\n    setStepsCounter(0);\n  }, []);\n\n  const [simRunning, setSimRunning] = useState(false);\n  const [simReseting, setSimReseting] = useState(false);\n  const [simRandom, setSimRandomize] = useState(false);\n  const [simSpeedometer, setSimSpeedometer] = useState(600);\n  const [buttonText, setButtonText] = useState(\"Start\");\n  const [stepsCounter, setStepsCounter] = useState(0);\n  const stepsCounterRef = useRef(stepsCounter);\n  stepsCounterRef.current = stepsCounter;\n\n  return (\n    <div className={Style.App}>\n      <DisplayPanel\n        setSimSpeed={setSimSpeed}\n        simSpeedometer={simSpeedometer}\n        stepsCounter={stepsCounter}\n      />\n      <Grid\n        simRunning={simRunning}\n        simReseting={simReseting}\n        simRandom={simRandom}\n        simSpeedometer={simSpeedometer}\n        addStepsCounter={addStepsCounter}\n        resetStepsCounter={resetStepsCounter}\n      />\n      <ControlsPanel\n        setSimRandom={setSimRandom}\n        setSimReset={setSimReset}\n        setSimRun={setSimRun}\n        Button_Text_1={buttonText}\n        id={Style.ControlPanel}\n      />\n      <CopyRightPanel id={Style.CopyRightPanel} />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from \"@reduxjs/toolkit\";\n\nexport const store = configureStore({\n  reducer: {},\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { store } from \"./app/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\nreportWebVitals();\n"],"sourceRoot":""}